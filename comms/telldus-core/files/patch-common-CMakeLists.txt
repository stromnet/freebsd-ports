--- common/CMakeLists.txt
+++ common/CMakeLists.txt
@@ -54,16 +54,29 @@ ELSEIF (WIN32)
 	)
 ELSEIF (CMAKE_SYSTEM_NAME MATCHES "FreeBSD")
 	#### FreeBSD ####
-	FIND_LIBRARY(ICONV_LIBRARY iconv)
+	string(REGEX MATCH "(([0-9]+)\\.([0-9]+))-([A-Z0-9])+" FREEBSD "${CMAKE_SYSTEM_VERSION}")
+	set( FREEBSD_RELEASE "${CMAKE_MATCH_1}" )
 	ADD_DEFINITIONS( -D_FREEBSD )
 	LIST(APPEND  telldus-common_SRCS
 		Event_unix.cpp
 		EventHandler_unix.cpp
 		Socket_unix.cpp
 	)
-	LIST(APPEND telldus-common_LIBRARIES
-		${ICONV_LIBRARY}
-	)
+
+	# FreeBSD 10 has iconv built in to libc
+	# However, if user has libiconv package installed, clang will find that header first,
+	# and we'd get a link error unless -liconv is added. This will at least let it build; we cannot
+	# force the user to NOT have libiconv installed.
+	# "proper" fix would be to force clang/gcc to use system header. How?
+	IF( (FREEBSD_RELEASE LESS 10) OR (EXISTS "/usr/local/include/iconv.h"))
+		IF(NOT (FREEBSD_RELEASE LESS 10))
+			MESSAGE(WARNING "building with libiconv from package instead of base. Port will fail?")
+		ENDIF()
+		FIND_LIBRARY(ICONV_LIBRARY iconv)
+		LIST(APPEND telldus-common_LIBRARIES
+			${ICONV_LIBRARY}
+		)
+	ENDIF ()
 ELSE (APPLE)
 	#### Linux ####
 	ADD_DEFINITIONS( -D_LINUX )
